/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.triangulos;

/**
 *
 * @author ASUS
 */
public class triangulo extends javax.swing.JFrame {

    /**
     * Creates new form triangulo
     */
    public triangulo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelLa = new javax.swing.JLabel();
        jLabelLc = new javax.swing.JLabel();
        jLabelLb = new javax.swing.JLabel();
        jLabelLh = new javax.swing.JLabel();
        jTFLadoA = new javax.swing.JTextField();
        jTFLadoB = new javax.swing.JTextField();
        jTFLadoC = new javax.swing.JTextField();
        jTFLadoh = new javax.swing.JTextField();
        jTipodTri = new javax.swing.JLabel();
        jBTCalc = new javax.swing.JButton();
        jLabelCalAng = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel1.setText("Tipos de Triángulos ");

        jLabelLa.setText("Lado a");

        jLabelLc.setText("lado c");

        jLabelLb.setText("Lado b");

        jLabelLh.setText("Altura h");

        jTipodTri.setText("Tipo de triángulo:");

        jBTCalc.setText("CALCULAR");
        jBTCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTCalcActionPerformed(evt);
            }
        });

        jLabelCalAng.setText("Ángulo y Área del triángulo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCalAng, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBTCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTipodTri, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 97, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelLc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTFLadoC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelLa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(jTFLadoA, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelLh, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLb, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFLadoB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFLadoh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLa)
                    .addComponent(jTFLadoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLb)
                    .addComponent(jTFLadoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLc)
                    .addComponent(jTFLadoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLh)
                    .addComponent(jTFLadoh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTipodTri)
                .addGap(18, 18, 18)
                .addComponent(jLabelCalAng)
                .addGap(28, 28, 28)
                .addComponent(jBTCalc)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBTCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTCalcActionPerformed
        // TODO add your handling code here:
        double val_a=0,val_b=0,val_c=0,val_h=0,A=0,B=0,C=0, resAnga=0, resAngb=0,
                 resAngc=0,Area=0,h=0,s=0,lado=0;
        
        String nombre= " ";
        
                
        
        // Datos del triangulo
        val_a=Float.parseFloat(jTFLadoA.getText());
        val_b=Float.parseFloat(jTFLadoB.getText());
        val_c=Float.parseFloat(jTFLadoC.getText());
        val_h=Float.parseFloat(jTFLadoh.getText());
        
        if (val_a==val_b && val_a==val_c)
        {nombre="Equilátero";
         jTipodTri.setText("Tipo de triángulo: "+nombre);}
        else if (val_a==val_b )
        { if (val_a >val_c)
            {
            nombre="Isóceles";
            jTipodTri.setText("Tipo de triángulo: "+nombre);}
          else 
            {
            jTipodTri.setText("Tipo de triángulo: No es isóceles ");
                
            }
         }
        else if (val_c==val_b )
        {
            if (val_c >val_a)
            {
            nombre="Isóceles";
            jTipodTri.setText("Tipo de triángulo: "+nombre);}
            else 
            {
            jTipodTri.setText("Tipo de triángulo: No es isóceles ");
                
            }
        }
        else if (val_a==val_c)
        {
             if (val_a >val_b)
            {
            nombre="Isóceles";
            jTipodTri.setText("Tipo de triángulo: "+nombre);}
            else 
            {
            jTipodTri.setText("Tipo de triángulo: No es isóceles ");
                
            }
         
        }
        
        else if (val_a != val_b && val_c != val_b && val_a!=val_c)
        {
        nombre="Escaleno";
        jTipodTri.setText("Tipo de triángulo: "+nombre);
        
       
        }
            
       
        switch (nombre)
        {
        
            case "Equilátero":
                    {   
                        A= val_b*val_b-(val_a*val_a)-(val_c*val_c);
                        A = A/(-2*val_a*val_c);
                        resAnga= Math.acos(A);
                        resAnga= resAnga*180/Math.PI;
                        A= Math.round(resAnga);
                        h=val_a*Math.sin(60);
                        h=h*180/Math.PI;
                        if (Math.round(val_h) == Math.round(h))
                            Area= Math.round((val_a*h)/2);
                        else
                            Area = Math.round(val_a*val_a*Math.sqrt(3)/4);
                                
                        
                        jLabelCalAng.setText("Ángulo A:  "+A+" Ángulo B:  "+A+" Ángulo C:  "+A+
                                " Área: "+Area);
                        
                        break;
                    }
            case "Escaleno":
                    {
                        
                             // Teorema de Cosenos
                        A= (val_b*val_b)+(val_c*val_c)-(val_a*val_a);
                        A = A/(2*val_b*val_c);
                        resAnga= Math.acos(A);
                        A= resAnga*180/Math.PI;
                        A= Math.round(A);
                       
                        B= val_c*val_c+(val_a*val_a)-(val_b*val_b);
                        B = B/(2*val_c*val_a);
                        resAngb= Math.acos(B);
                        B= resAngb*180/Math.PI;
                        B= Math.round(B);
                        
                        C= val_a*val_a+(val_b*val_b)-(val_c*val_c);
                        C = C/(2*val_a*val_b);
                        resAngc= Math.acos(C);
                        C= resAngc*180/Math.PI;
                        C= Math.round(C);
                        
                   
                        
                        // Teorema del Seno
                       
                       
                     
                     
                        
                        s=(val_a+val_b+val_c)/2;
                        Area= s*(s-val_a)*(s-val_b)*(s-val_c);
                        Area= Math.round(Math.sqrt(Area));
                       
                        jLabelCalAng.setText("Ángulo A:  "+A+" Ángulo B:  "+B+" Ángulo C:  "+C+
                                " Área: "+Area);
                        break;
                    }
            case "Isóceles":
                    {   
                        
                        
                        A= (val_b*val_b)+(val_c*val_c)-(val_a*val_a);
                        A = A/(2*val_b*val_c);
                        resAnga= Math.acos(A);
                        A= resAnga*180/Math.PI;
                        A= Math.round(A);
                       
                        B= val_c*val_c+(val_a*val_a)-(val_b*val_b);
                        B = B/(2*val_c*val_a);
                        resAngb= Math.acos(B);
                        B= resAngb*180/Math.PI;
                        B= Math.round(B);
                        
                        C= val_a*val_a+(val_b*val_b)-(val_c*val_c);
                        C = C/(2*val_a*val_b);
                        resAngc= Math.acos(C);
                        C= resAngc*180/Math.PI;
                        C= Math.round(C);
                        if (val_a==val_c)
                        {
                        Area = Math.round((val_b* Math.sqrt((val_a*val_a-(val_b*val_b)/4)))/2);
                        }
                        else if (val_a==val_b)
                        {
                        Area = Math.round((val_c* Math.sqrt((val_a*val_a-(val_c*val_c)/4)))/2);
                        }
                        else  if (val_b==val_c)
                        {
                        Area = Math.round((val_a* Math.sqrt((val_b*val_b-(val_a*val_a)/4)))/2);        
                        }
                        
                        
                        
                        jLabelCalAng.setText("Ángulo A:  "+A+" Ángulo B:  "+B+" Ángulo C:  "+C+
                                " Área: "+Area);
                        break;
                    }
                    
        
        }
                
    }//GEN-LAST:event_jBTCalcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(triangulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(triangulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(triangulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(triangulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new triangulo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTCalc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCalAng;
    private javax.swing.JLabel jLabelLa;
    private javax.swing.JLabel jLabelLb;
    private javax.swing.JLabel jLabelLc;
    private javax.swing.JLabel jLabelLh;
    private javax.swing.JTextField jTFLadoA;
    private javax.swing.JTextField jTFLadoB;
    private javax.swing.JTextField jTFLadoC;
    private javax.swing.JTextField jTFLadoh;
    private javax.swing.JLabel jTipodTri;
    // End of variables declaration//GEN-END:variables
}
